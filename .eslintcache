[{"/Users/jessicagomesng/places-ive-been/src/reportWebVitals.js":"1","/Users/jessicagomesng/places-ive-been/src/App.js":"2","/Users/jessicagomesng/places-ive-been/src/components/LogIn.js":"3","/Users/jessicagomesng/places-ive-been/src/components/SignUp.js":"4","/Users/jessicagomesng/places-ive-been/src/containers/Map.js":"5","/Users/jessicagomesng/places-ive-been/src/index.js":"6","/Users/jessicagomesng/places-ive-been/src/reducers/userReducer.js":"7","/Users/jessicagomesng/places-ive-been/src/reducers/logInReducer.js":"8","/Users/jessicagomesng/places-ive-been/src/reducers/mapReducer.js":"9","/Users/jessicagomesng/places-ive-been/src/reducers/rootReducer.js":"10","/Users/jessicagomesng/places-ive-been/src/components/Country.js":"11","/Users/jessicagomesng/places-ive-been/src/components/CountryList.js":"12","/Users/jessicagomesng/places-ive-been/src/components/Home.js":"13","/Users/jessicagomesng/places-ive-been/src/ProtectedRoute.js":"14","/Users/jessicagomesng/places-ive-been/src/components/Canvas.js":"15","/Users/jessicagomesng/places-ive-been/src/containers/PinMap.js":"16","/Users/jessicagomesng/places-ive-been/src/containers/Pins.js":"17","/Users/jessicagomesng/places-ive-been/src/reducers/pinReducer.js":"18","/Users/jessicagomesng/places-ive-been/src/components/Pin.js":"19","/Users/jessicagomesng/places-ive-been/src/components/PinCard.js":"20","/Users/jessicagomesng/places-ive-been/src/components/AddPin.js":"21","/Users/jessicagomesng/places-ive-been/src/components/PinShow.js":"22","/Users/jessicagomesng/places-ive-been/src/components/EditPin.js":"23","/Users/jessicagomesng/places-ive-been/src/actions/actionsIndex.js":"24"},{"size":362,"mtime":1607177834641,"results":"25","hashOfConfig":"26"},{"size":4709,"mtime":1608217560330,"results":"27","hashOfConfig":"26"},{"size":2863,"mtime":1608218197430,"results":"28","hashOfConfig":"26"},{"size":2728,"mtime":1608218121537,"results":"29","hashOfConfig":"26"},{"size":4146,"mtime":1608219852566,"results":"30","hashOfConfig":"26"},{"size":809,"mtime":1608217411185,"results":"31","hashOfConfig":"26"},{"size":312,"mtime":1607442868174,"results":"32","hashOfConfig":"26"},{"size":282,"mtime":1607447612622,"results":"33","hashOfConfig":"26"},{"size":526,"mtime":1607262800508,"results":"34","hashOfConfig":"26"},{"size":367,"mtime":1607703462568,"results":"35","hashOfConfig":"26"},{"size":308,"mtime":1608136632588,"results":"36","hashOfConfig":"26"},{"size":555,"mtime":1608218760383,"results":"37","hashOfConfig":"26"},{"size":1801,"mtime":1608217571735,"results":"38","hashOfConfig":"26"},{"size":360,"mtime":1607446492855,"results":"39","hashOfConfig":"26"},{"size":6585,"mtime":1607710963100,"results":"40","hashOfConfig":"26"},{"size":3337,"mtime":1608220678792,"results":"41","hashOfConfig":"26"},{"size":9849,"mtime":1608218725534,"results":"42","hashOfConfig":"26"},{"size":1164,"mtime":1608051144316,"results":"43","hashOfConfig":"26"},{"size":1600,"mtime":1608220514824,"results":"44","hashOfConfig":"26"},{"size":307,"mtime":1608220202140,"results":"45","hashOfConfig":"26"},{"size":1516,"mtime":1608219018605,"results":"46","hashOfConfig":"26"},{"size":565,"mtime":1608220394336,"results":"47","hashOfConfig":"26"},{"size":1615,"mtime":1608218955695,"results":"48","hashOfConfig":"26"},{"size":2082,"mtime":1608130471532,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"x98fzz",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"86"},{"filePath":"87","messages":"88","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/jessicagomesng/places-ive-been/src/reportWebVitals.js",[],["106","107"],"/Users/jessicagomesng/places-ive-been/src/App.js",[],"/Users/jessicagomesng/places-ive-been/src/components/LogIn.js",[],"/Users/jessicagomesng/places-ive-been/src/components/SignUp.js",[],"/Users/jessicagomesng/places-ive-been/src/containers/Map.js",["108"],"// this should be functional \nimport React from 'react';\nimport { Route, Link } from 'react-router-dom';\nimport Country from '../components/Country.js'\nimport CountryList from '../components/CountryList';\nimport '../css/map.css';\n\n\nconst Map = (props) => {\n    React.useEffect( () => {\n        props.fetchCountries()\n    }, [])\n\n    if (props.map.loading) { \n        return (\n            <p class=\"instruction\">Loading Countries...</p>\n        )\n    } else {\n        return (\n        <div>\n            <div>\n                <p class=\"instruction\">Click on a country to mark that you've visited it!</p>\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1000\" height=\"684\" fill=\"#ececec\" stroke=\"#000\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"0.2\" version=\"1.2\">\n                    { props.map.countries.map( (country) => {\n                        let status;\n                        props.user.countries.find((userCountry) => userCountry.id === country.id) ? status = 'visited' : status = 'unvisited';\n                        return <Country key={country.id} country={country} userID={props.user.id} visitCountry={props.visitCountry} status={status} />\n                    } )}\n                    <circle cx=\"399.9\" cy=\"390.8\"></circle>\n                    <circle cx=\"575.4\" cy=\"412\"></circle>\n                    <circle cx=\"521\" cy=\"266.6\"></circle>\n                </svg> \n            </div>\n\n            <div id=\"country-list\">\n                <Route path={`${props.match.url}/mycountries`}>\n                    <CountryList countries={props.user.countries} />\n                </Route>\n                {props.location.pathname === '/map/mycountries' ? <Link to=\"/map\">Hide My Countries</Link> : <Link to=\"/map/mycountries\">See My Countries</Link>}\n            </div>\n        </div>\n        )\n    }\n}\n\nexport default Map;\n\n// class Map extends React.Component {\n//     // fetch request to countries index & get all countries \n//     // if country.users includes the user id, then add an attribute to the rendered path that says \"visited\" or something\n\n//     componentDidMount() {\n//         this.props.fetchCountries()\n//     }\n\n//     renderCountries() {\n//         if (this.props.map.loading) {\n//             return (\n//                 <div>loading countries</div>\n//             )\n//         } else {\n//             return (\n//             <div>\n            \n//                 <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1000\" height=\"684\" fill=\"#ececec\" stroke=\"#000\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"0.1\" version=\"1.2\">\n//                     { this.props.map.countries.map( (country) => {\n//                         let status;\n//                         this.props.user.countries.find((userCountry) => userCountry.id === country.id) ? status = 'visited' : status = 'unvisited';\n//                         return <Country key={country.id} country={country} userID={this.props.user.id} visitCountry={this.props.visitCountry} status={status} />\n//                     } )}\n//                     {/* { this.props.map.countries.map((country) => { return <Country key={country.id} country={country} userID={this.props.user.id} visitCountry={this.props.visitCountry} />})} */}\n//                     {/* { this.props.map.countries.map((country) => { return <path key={country.id} d={country.path} id={country.abbreviation} name={country.name} />})} */}\n//                     <circle cx=\"399.9\" cy=\"390.8\"></circle>\n//                     <circle cx=\"575.4\" cy=\"412\"></circle>\n//                     <circle cx=\"521\" cy=\"266.6\"></circle>\n//                 </svg> \n//             </div>)\n//         }\n//     }\n    \n//     render() {\n//         return (\n//             <div>\n//                 {this.renderCountries()}\n//             <Route path={`${this.props.match.url}/mycountries`}>\n//                 <CountryList countries={this.props.user.countries} />\n//             </Route>\n//             <Link to=\"/map/mycountries\">See My Countries</Link>\n//             <Link to=\"/map\">Hide My Countries</Link>\n//             </div>\n//         )\n//     }\n// }\n\n// export default Map;","/Users/jessicagomesng/places-ive-been/src/index.js",[],"/Users/jessicagomesng/places-ive-been/src/reducers/userReducer.js",[],["109","110"],"/Users/jessicagomesng/places-ive-been/src/reducers/logInReducer.js",[],["111","112"],"/Users/jessicagomesng/places-ive-been/src/reducers/mapReducer.js",[],"/Users/jessicagomesng/places-ive-been/src/reducers/rootReducer.js",[],["113","114"],"/Users/jessicagomesng/places-ive-been/src/components/Country.js",[],"/Users/jessicagomesng/places-ive-been/src/components/CountryList.js",[],"/Users/jessicagomesng/places-ive-been/src/components/Home.js",[],"/Users/jessicagomesng/places-ive-been/src/ProtectedRoute.js",[],"/Users/jessicagomesng/places-ive-been/src/components/Canvas.js",["115","116"],"import React, { useRef } from 'react'\nimport AddPin from './AddPin'\nimport axios from 'axios'\n\n// Navigate to view existing pins\n// Click add a pin to be taken to this canvas where the pin is shown on the page & a form is displayed \n// When the form is submitted, it should submit a post request to the server & then redirect the user to the existing pins map\n// On this map, they can hover over each pin to view information about it \n\n// When I add a pin, it should display a form, then send a post request to the server\n// I want to be able to click a pin and a form will display for that to be deleted.\n// Canvas, on load, should fetch all existing pins and display those\n// Click on a pin to see information about it (takes you to the show page) \n\nclass Canvas extends React.Component {\n    constructor(props) {\n        super(props)\n        this.canvasRef = React.createRef();\n        this._onMarkerAdd = this._onMarkerAdd.bind(this);\n        this.state = {\n            showComponent: false\n        }\n    }\n\n    _onMarkerAdd() {\n        this.setState({\n            showComponent: true\n        })\n    }\n\n    componentDidMount() {\n        const canvas = this.canvasRef.current \n        const context = canvas.getContext('2d')\n        let newMap = new Image();\n        newMap.src = \"https://simplemaps.com/static/demos/resources//svg-library/svgs/europe.svg\";\n        context.fillStyle=\"#FFF\";\n        context.fillRect(0, 0, canvas.width, canvas.height);\n        newMap.onload = function() {\n            context.drawImage(newMap, 0, 0, 1000, 684)\n        }\n\n        canvas.addEventListener('click', function(event) {\n            var rect = canvas.getBoundingClientRect();\n            var mouseXPos = (event.clientX - rect.left);\n            var mouseYPos = (event.clientY - rect.top);\n            console.log(event.clientX, event.clientY)\n            console.log(rect)\n    \n            // console.log(mouseXPos, mouseYPos)\n\n            // let newMap = new Image();\n            // newMap.src = \"https://simplemaps.com/static/demos/resources//svg-library/svgs/europe.svg\";\n            // context.fillStyle=\"#FFF\";\n            // context.fillRect(0, 0, canvas.width, canvas.height)\n            // context.drawImage(newMap, 0, 0, 700, 700)\n\n            let tempMarker = new Image();\n            tempMarker.src = \"https://upload.wikimedia.org/wikipedia/commons/thumb/e/e7/Empty_Star.svg/1200px-Empty_Star.svg.png\";\n            let x = mouseXPos - 15;\n            let y = mouseYPos - 15;\n\n            tempMarker.onload = function() {\n                context.drawImage(tempMarker, x, y, 30, 30);\n            }\n            // tempMarker.xPos = mouseXPos-6;\n            // tempMarker.yPos = mouseYPos-20;\n\n            // context.font = \"15px times\"\n            // context.textAlign = \"center\";\n\n\n            let markerText = `${x}, ${y}`\n\n            const textMeasurements = context.measureText(markerText);\n            context.fillStyle=\"#666\";\n            context.globalAlpha = 0;\n            context.fillRect(x - (textMeasurements.width / 2), y - 15, textMeasurements.width, 20);\n            context.globalAlpha = 1;\n            \n            context.fillStyle = '#000';\n            context.fillText(markerText, x, y)\n        })\n    }\n\n    // handleClick = (event, canvas) => {\n    //     var rect = canvas.getBoundingClientRect();\n    //     console.log(rect);\n    //     var mouseXPos = (event.clientX - rect.left);\n    //     var mouseYPos = (event.clientY - rect.top);\n\n    //     console.log(\"Marker added\");\n\n    //     let marker = { src: \"http://www.clker.com/cliparts/w/O/e/P/x/i/map-marker-hi.png\", width: \"12\", height: \"20\", xPos: mouseXPos-6, yPos: mouseYPos-20};\n\n    //     this.setState({\n    //         markers: [...this.state.markers, marker]\n    //     })\n    // }\n\n    // componentDidMount() {\n    //     const canvas = this.canvasRef.current \n    //     const context = canvas.getContext('2d')\n\n    //     let frameCount = 0 \n    //     let animationFrameId\n\n    //     const render = () => {\n    //         frameCount++ \n    //         // this.draw(context, frameCount)\n    //         this.props.draw(context, frameCount)\n    //         animationFrameId = window.requestAnimationFrame(render)\n    //     }\n    //     render() \n\n    //     return () => {\n    //         window.cancelAnimationFrame(animationFrameId)\n    //     }\n    //     // this.draw(context)\n    //     // context.fillStyle = '#000000'\n    //     // context.fillRect(0, 0, context.canvas.width, context.canvas.height)\n    // }\n\n    // handleClick = (event) => {\n    //     let rect = canvas.getBoundingClientRect();\n    //     let mouseXPos = (event.clientX - rect.left);\n    //     let mouseYPos = (event.clientY - rect.top);\n\n    //     console.log(\"Marker added\");\n\n    //     <Marker xPos={mouseXPos} yPos={mouseYPos}/>\n    // }\n\n    // main = () => {\n    //     drawTwo();\n    // }\n\n    // drawTwo = (context, canvas) => {\n    //     context.fillStyle = '#000000';\n    //     context.fillRect(0, 0, canvas.width, canvas.height)\n        \n    // }\n\n    render() {\n        return (\n            <div id='map-container'>\n                <canvas ref={this.canvasRef} {...this.props} id=\"Canvas\" width=\"1000\" height=\"684\" onClick={this._onMarkerAdd}/>\n                {this.state.showComponent ? <AddPin addAPin={this.props.addAPin} userID={this.props.userID} />\n                    // {/* <form>\n                    //     <h3>Add a Memory:</h3>\n                    //     <input type=\"text\" name=\"img\" placeholder=\"link your image here\" />\n                    //     <input type=\"text\" name=\"location\" placeholder=\"location (eg: Paris, FR)\" />\n                    //     <input type=\"text\" name=\"caption\" placeholder=\"caption\" />\n                    //     <input type=\"submit\" value=\"Add\"/>\n                    // </form> */}\n                : null }\n            </div>\n        )\n    }\n\n}\n// // const Canvas = (props) => {\n\n// //     const canvasRef = useRef(null)\n\n// //     useEffect(() => {\n// //         const canvas = canvasRef.current\n// //         const context = canvasRef.getContext('2d')\n\n// //         context.fillStyle = '#000000'\n// //         context.fillRect(0, 0, context.canvas.width, context.canvas.height )\n\n// //     }, []) \n\n\n// //     return <canvas ref={canvasRef} {...props} />\n\n// // }\n\nexport default Canvas;\n\n// import React from 'react';\n// import useCanvas from './useCanvas'\n\n// const Canvas = props => {\n\n//     const { draw, ...rest } = props\n//     const canvasRef = useCanvas(draw)\n\n//     return <canvas ref={canvasRef} {...rest} />\n// }\n\n// export default Canvas;",["117","118"],"/Users/jessicagomesng/places-ive-been/src/containers/PinMap.js",["119"],"import React from 'react';\nimport AddPin from '../components/AddPin'\nimport pin from '../css/images/pin.png'\n\n\nclass PinMap extends React.Component {\n    constructor(props) {\n        super(props)\n        this._handleClick = this._handleClick.bind(this)\n        this.mapRef = React.createRef();\n        this.markerRef = React.createRef();\n        this.state = {\n            showForm: false,\n            showImage: false,\n            xCoord: '',\n            yCoord: '',\n            xPerc: '',\n            yPerc: ''\n        }\n    }\n\n    _handleClick(event) {\n        this.setState({\n            showImage: true,\n            xCoord: event.pageX - 7.5,\n            yCoord: event.pageY - 39.55\n        })\n        window.scrollTo(0,document.body.scrollHeight);\n        console.log(event.clientX, event.clientY)\n        console.log(event.pageX, event.pageY)\n        console.log(this.state.showImage)\n    }\n\n\n    componentDidMount() {\n        this.props.fetchCountries()\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (this.state.xCoord !== prevState.xCoord) {\n            const outerRect = this.mapRef.current.getBoundingClientRect();\n            console.log(outerRect)\n\n            if (this.markerRef.current) {\n                const innerRect = this.markerRef.current.getBoundingClientRect();\n                console.log(innerRect)\n\n                let topDiff = innerRect.top - outerRect.top \n                let leftDiff = innerRect.left - outerRect.left \n        \n                let leftPerc = Math.round(leftDiff/outerRect.width * 100) / 100\n                let topPerc = Math.round(topDiff/outerRect.height * 100) / 100\n                \n                this.setState({\n                    showForm: true,\n                    xPerc: leftPerc,\n                    yPerc: topPerc\n                })\n            }\n        }\n    }\n\n    render() {\n        return (\n            <div id=\"map-container\">\n                <p class=\"instruction\">Click anywhere on the map to place your pin, then fill in the form to create your memory!</p>\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1000\" height=\"684\" fill=\"#ececec\" stroke=\"#000\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"0.2\" version=\"1.2\" onMouseDown={this._handleClick} ref={this.mapRef}>\n                    { this.props.map.countries.map( (country) => {\n                        let status;\n                        this.props.user.countries.find((userCountry) => userCountry.id === country.id) ? status = 'visited add-pin' : status = 'unvisited add-pin';\n                        return <path key={country.id} d={country.path} id={country.abbreviation} name={country.name} className={status}/>\n                    } )}\n                    <circle cx=\"399.9\" cy=\"390.8\"></circle>\n                    <circle cx=\"575.4\" cy=\"412\"></circle>\n                    <circle cx=\"521\" cy=\"266.6\"></circle>\n                </svg> \n                \n                {this.state.showImage ? <img src={pin} style={{position: 'absolute', top: this.state.yCoord + 'px', left: this.state.xCoord + 'px'}} ref={this.markerRef} className=\"pin\" /> : null }\n                {this.state.showForm ? <AddPin addAPin={this.props.addAPin} userID={this.props.user.id} xPerc={this.state.xPerc} yPerc={this.state.yPerc} /> : null}\n        )\n    }\n}\n\nexport default PinMap;","/Users/jessicagomesng/places-ive-been/src/containers/Pins.js",[],"/Users/jessicagomesng/places-ive-been/src/reducers/pinReducer.js",[],"/Users/jessicagomesng/places-ive-been/src/components/Pin.js",[],"/Users/jessicagomesng/places-ive-been/src/components/PinCard.js",[],"/Users/jessicagomesng/places-ive-been/src/components/AddPin.js",[],"/Users/jessicagomesng/places-ive-been/src/components/PinShow.js",["120"],"/Users/jessicagomesng/places-ive-been/src/components/EditPin.js",["121"],"/Users/jessicagomesng/places-ive-been/src/actions/actionsIndex.js",[],{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","severity":1,"message":"127","line":12,"column":8,"nodeType":"128","endLine":12,"endColumn":10,"suggestions":"129"},{"ruleId":"122","replacedBy":"130"},{"ruleId":"124","replacedBy":"131"},{"ruleId":"122","replacedBy":"132"},{"ruleId":"124","replacedBy":"133"},{"ruleId":"122","replacedBy":"134"},{"ruleId":"124","replacedBy":"135"},{"ruleId":"136","severity":1,"message":"137","line":1,"column":17,"nodeType":"138","messageId":"139","endLine":1,"endColumn":23},{"ruleId":"136","severity":1,"message":"140","line":3,"column":8,"nodeType":"138","messageId":"139","endLine":3,"endColumn":13},{"ruleId":"122","replacedBy":"141"},{"ruleId":"124","replacedBy":"142"},{"ruleId":null,"fatal":true,"severity":2,"message":"143","line":79,"column":165},{"ruleId":"144","severity":1,"message":"145","line":5,"column":41,"nodeType":"146","messageId":"147","endLine":5,"endColumn":43},{"ruleId":"144","severity":1,"message":"145","line":31,"column":56,"nodeType":"146","messageId":"147","endLine":31,"endColumn":58},"no-native-reassign",["148"],"no-negated-in-lhs",["149"],"react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside React.useEffect.","ArrayExpression",["150"],["148"],["149"],["148"],["149"],["148"],["149"],"no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","'axios' is defined but never used.",["148"],["149"],"Parsing error: Unterminated JSX contents\n\n  77 |                 \n  78 |                 {this.state.showImage ? <img src={pin} style={{position: 'absolute', top: this.state.yCoord + 'px', left: this.state.xCoord + 'px'}} ref={this.markerRef} className=\"pin\" /> : null }\n> 79 |                 {this.state.showForm ? <AddPin addAPin={this.props.addAPin} userID={this.props.user.id} xPerc={this.state.xPerc} yPerc={this.state.yPerc} /> : null}\n     |                                                                                                                                                                     ^\n  80 |         )\n  81 |     }\n  82 | }","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"151","fix":"152"},"Update the dependencies array to be: [props]",{"range":"153","text":"154"},[324,326],"[props]"]